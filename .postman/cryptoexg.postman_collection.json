{
	"info": {
		"_postman_id": "39004a31-8d11-47c0-8455-d538edf30bde",
		"name": "cryptoexg",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23144581"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "validation",
					"item": [
						{
							"name": "validation of user registration",
							"item": [
								{
									"name": "username",
									"item": [
										{
											"name": "Регистрация нового пользователя (Без псевдонима)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"email@mail.ru\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Регистрация нового пользователя (Пустой псевдоним)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"\",\n    \"email\": \"email@mail.ru\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Регистрация нового пользователя (Псевдоним из пустоты)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"    \",\n    \"email\": \"email@mail.ru\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "email",
									"item": [
										{
											"name": "Регистрация нового пользователя (Без почты)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"username\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Регистрация нового пользователя (Пустая почта)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"username\",\n    \"email\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Регистрация нового пользователя (Почта из пустоты)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"username\",\n    \"email\": \"      \"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Регистрация нового пользователя (Некорректная почта)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"vasya_vezunchik\",\n    \"email\": \"mail.ru\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "validation of wallet replenishment",
							"item": [
								{
									"name": "secret key",
									"item": [
										{
											"name": "Пополнение кошелька (Без секретного ключа)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"RUB_wallet\": 170\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/deposit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"deposit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Пополнение кошелька (Пустой секретный ключ)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secret_key\": \"\",\n    \"RUB_wallet\": 170\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/deposit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"deposit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Пополнение кошелька (Секретный ключ из пустоты)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secret_key\": \"     \",\n    \"RUB_wallet\": 170\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/deposit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"deposit"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "amount of currency",
									"item": [
										{
											"name": "Пополнение кошелька (Отрицательное количество)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secret_key\": \"{{user_1_secret_key}}\",\n    \"RUB_wallet\": -100\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/deposit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"deposit"
													]
												}
											},
											"response": []
										},
										{
											"name": "Пополнение кошелька (Нулевое количество)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secret_key\": \"{{user_1_secret_key}}\",\n    \"RUB_wallet\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/deposit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"deposit"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "validation of withdrawal from the wallet",
							"item": [
								{
									"name": "secret key",
									"item": [
										{
											"name": "Вывод средств из кошелька (Без секретного ключа)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "    {\n        \"currency\": \"RUB\",\n        \"count\": 1500,\n        \"credit_card\": \"4000 5876 3247 5964\"\n    }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										},
										{
											"name": "Вывод средств из кошелька (Пустой секретный ключ)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"\",\n        \"currency\": \"RUB\",\n        \"count\": 1500,\n        \"credit_card\": \"4000 5876 3247 5964\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										},
										{
											"name": "Вывод средств из кошелька (Секретный ключ из пустоты)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"     \",\n        \"currency\": \"RUB\",\n        \"count\": 1500,\n        \"credit_card\": \"4000 5876 3247 5964\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "currency",
									"item": [
										{
											"name": "Вывод средств из кошелька (Без валюты)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"secret_key\",\n        \"count\": 1500,\n        \"credit_card\": \"4000 5876 3247 5964\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										},
										{
											"name": "Вывод средств из кошелька (Неизвестная валюта)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"secret_key\",\n        \"currency\": \"Unknown currency\",\n        \"count\": 1500,\n        \"credit_card\": \"4000 5876 3247 5964\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "amount of currency",
									"item": [
										{
											"name": "Вывод средств из кошелька (Без количества)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"secret_key\",\n        \"currency\": \"RUB\",\n        \"credit_card\": \"4000 5876 3247 5964\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										},
										{
											"name": "Вывод средств из кошелька (Отрицательное количество)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"secret_key\",\n        \"currency\": \"RUB\",\n        \"count\": -200,\n        \"credit_card\": \"4000 5876 3247 5964\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										},
										{
											"name": "Вывод средств из кошелька (Нулевое количество)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"secret_key\",\n        \"currency\": \"RUB\",\n        \"count\": 0,\n        \"credit_card\": \"4000 5876 3247 5964\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Validation of withdrawal methods",
									"item": [
										{
											"name": "Вывод средств из кошелька (Указано два способа)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"secret_key\",\n        \"currency\": \"RUB\",\n        \"count\": 1500,\n        \"credit_card\": \"4000 5876 3247 5964\",\n        \"wallet\": \"abcdefghijk1234567891011\"\n    }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										},
										{
											"name": "Вывод средств из кошелька (Не указано не одного способа)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"secret_key\": \"secret_key\",\n        \"currency\": \"RUB\",\n        \"count\": 1500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{userBaseUrl}}",
														"wallet",
														"withdraw"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Регистрация нового пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"pm.test(\"user has json-response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"user has secret_key\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('secret_key');",
									"});",
									"pm.test(\"'secret_key' size must be 34\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.secret_key.length, '\"secret_key\" size must be 34').to.eql(34);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"user_1_secret_key\", jsonData.secret_key);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"vasya_vezunchik\",\n    \"email\": \"vasyu_kolbasit@mail.ru\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userBaseUrl}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userBaseUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Регистрация нового пользователя (Дубликат псевдонима)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});",
									"pm.test(\"error has json-response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"vasya_vezunchik\",\n    \"email\": \"email@mail.ru\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userBaseUrl}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userBaseUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Регистрация нового пользователя (Дубликат почты)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});",
									"pm.test(\"error has json-response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"username\",\n    \"email\": \"vasyu_kolbasit@mail.ru\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userBaseUrl}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userBaseUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Просмотр баланса своего кошелька",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"balance has json-response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"balance empty\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.empty",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secret_key",
								"value": "{{user_1_secret_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userBaseUrl}}",
								"wallet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Пополнение кошелька",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"pm.test(\"user account has json-response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"user account has 'RUB_wallet'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('RUB_wallet');",
									"});",
									"pm.test(\"'RUB_wallet' must be 1000\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.RUB_wallet).eql('1000');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secret_key\": \"{{user_1_secret_key}}\",\n    \"RUB_wallet\": 1000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userBaseUrl}}",
								"wallet",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Вывод средств из кошелька (На банковскую карту)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"pm.test(\"user account has json-response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"user account has 'RUB_wallet'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('RUB_wallet');",
									"});",
									"pm.test(\"'RUB_wallet' must be 800\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.RUB_wallet).eql('800');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secret_key\": \"{{user_1_secret_key}}\",\n    \"currency\": \"RUB\",\n    \"count\": 200,\n    \"credit_card\": \"4000 5876 3247 5964\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userBaseUrl}}",
								"wallet",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Вывод средств из кошелька (На крипто-счёт)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"pm.test(\"user account has json-response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"pm.test(\"user account has 'RUB_wallet'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('RUB_wallet');",
									"});",
									"pm.test(\"'RUB_wallet' must be 450\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.RUB_wallet).eql('450');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secret_key\": \"{{user_1_secret_key}}\",\n    \"currency\": \"RUB\",\n    \"count\": 350,\n    \"wallet\": \"abcdefghijk1234567891011\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/{{userBaseUrl}}/wallet/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{userBaseUrl}}",
								"wallet",
								"withdraw"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "admin",
			"item": [
				{
					"name": "validation",
					"item": [
						{
							"name": "validation of the rate update",
							"item": [
								{
									"name": "secret key",
									"item": [
										{
											"name": "Обновление курса валют (Без секретного ключа)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"base_currency\": \"TON\",\n\t\"BTC\": \"0.000095\",\n\t\"RUB\": \"150\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{adminBaseUrl}}/rate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{adminBaseUrl}}",
														"rate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Обновление курса валют (Пустой секретный ключ)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secret_key\": \"\",\n    \"base_currency\": \"TON\",\n    \"BTC\": \"0.000095\",\n    \"RUB\": \"150\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{adminBaseUrl}}/rate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{adminBaseUrl}}",
														"rate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Обновление курса валют (Секретный ключ из пустоты)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secret_key\": \"     \",\n    \"base_currency\": \"TON\",\n    \"BTC\": \"0.000095\",\n    \"RUB\": \"150\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{adminBaseUrl}}/rate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{adminBaseUrl}}",
														"rate"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "amount of curremcy",
									"item": [
										{
											"name": "Обновление курса валют (Отрицательное количество)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secret_key\": \"{{admin_1_secret_key}}\",\n    \"base_currency\": \"TON\",\n    \"BTC\": \"-0.000095\",\n    \"RUB\": \"-150\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{adminBaseUrl}}/rate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{adminBaseUrl}}",
														"rate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Обновление курса валют (Нулевое количество)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"status code is 400\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([400]);",
															"});",
															"pm.test(\"error has json-response\", function () {",
															"    pm.response.to.be.withBody;",
															"    pm.response.to.be.json;",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"secret_key\": \"{{admin_1_secret_key}}\",\n    \"base_currency\": \"TON\",\n    \"BTC\": \"0\",\n    \"RUB\": \"150\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/{{adminBaseUrl}}/rate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"{{adminBaseUrl}}",
														"rate"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "userBaseUrl",
			"value": "users"
		},
		{
			"key": "adminBaseUrl",
			"value": "admins"
		}
	]
}